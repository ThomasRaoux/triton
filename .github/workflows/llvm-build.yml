name: LLVM Build

on:
  push:
    branches:
      - github_action
    paths:
      - cmake/llvm-hash.txt
  workflow_dispatch:

env:
  SCCACHE_DIR: ${{ github.workspace }}/sccache

permissions:
  id-token: write
  contents: write
  pull-requests: write  

jobs:

  build:
    name: Build on ${{ matrix.config.runner }}
    runs-on: ${{ matrix.config.runs_on }}
    timeout-minutes: 240  # 4 hours

    strategy:
      fail-fast: true
      matrix:
        config:
      #  - {runner: 'Ubuntu 20.04', runs_on: 'ubuntu-20.04', target-os: 'ubuntu', arch: 'x64'}
      #  - {runner: 'Ubuntu 20.04 ARM64', runs_on: 'ubuntu-20.04', target-os: 'ubuntu', arch: 'arm64'}
      #  - {runner: 'CentOS 7', runs_on: ['self-hosted', 'CPU'], target-os: 'centos', arch: 'x64'}
      #  - {runner: 'AlmaLinux 8', runs_on: ['self-hosted', 'CPU'], target-os: 'almalinux', arch: 'x64'}
        - {runner: 'MacOS X64', runs_on: 'macos-12', target-os: 'macos', arch: 'x64'}
        - {runner: 'MacOS ARM64', runs_on: 'macos-12', target-os: 'macos', arch: 'arm64'}
        # TODO(#2805): add back once the workflow works and runs in comparable time to the other ones
        # - {runner: 'Windows Latest', runs_on: 'windows-latest', target-os: 'windows', arch: 'x64'}

    steps:

    - name: Checkout Repo
      uses: actions/checkout@v4
      with:
        path: llvm-build

    - name: Fetch LLVM Commit Hash
      shell: bash
      run: |
        LLVM_COMMIT_HASH="$(cat llvm-build/cmake/llvm-hash.txt)"
        echo "Found LLVM commit hash: ${LLVM_COMMIT_HASH}"
        echo "llvm_commit_hash=${LLVM_COMMIT_HASH}" >> ${GITHUB_ENV}

        SHORT_LLVM_COMMIT_HASH="${LLVM_COMMIT_HASH:0:8}"
        echo "Short LLVM commit hash: ${SHORT_LLVM_COMMIT_HASH}"
        echo "short_llvm_commit_hash=${SHORT_LLVM_COMMIT_HASH}" >> ${GITHUB_ENV}

        INSTALL_DIR="llvm-${SHORT_LLVM_COMMIT_HASH}-${{ matrix.config.target-os }}-${{ matrix.config.arch }}"
        echo "LLVM installation directory name: ${INSTALL_DIR}"
        echo "llvm_install_dir=${INSTALL_DIR}" >> ${GITHUB_ENV}
    
    - name: Checkout LLVM
      uses: actions/checkout@v4
      with:
        repository: llvm/llvm-project
        path: llvm-project
        ref: ${{ env.llvm_commit_hash }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Set up MSVC
      if: matrix.config.arch == 'x64' && (matrix.config.target-os == 'windows')
      uses: ilammy/msvc-dev-cmd@v1.13.0
      with:
        arch: amd64

    - name: Install Prerequisites
      shell: bash
      run: |
        python3 -m pip install cmake ninja sccache
        mkdir -p ${{ env.SCCACHE_DIR }}
        rm -rf ${{ env.SCCACHE_DIR }}/*

    - name: Enable Cache
      uses: actions/cache@v4
      with:
        path: ${{ env.SCCACHE_DIR }}
        key: ${{ matrix.config.target-os }}-${{ matrix.config.arch }}-${{ env.short_llvm_commit_hash }}
        restore-keys: ${{ matrix.config.target-os }}-${{ matrix.config.arch }}-

    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Generate Hashes of Artifacts
      run: |
        mkdir -p ${{ github.workspace }}/hashes
        echo "SHA256 hashes of LLVM build artifacts:" >> ${{ github.workspace }}/hashes/hashes-${{ matrix.config.target-os }}-${{ matrix.config.arch }}.txt

    - name: Commit changes
      run: |
          cd ${{ github.workspace }}/
          git config --global user.name 'Your Name'
          git config --global user.email 'your-email@example.com'
          git checkout ${{ github.head_ref }}
          # Make changes here
          git add hashes/hashes-${{ matrix.config.target-os }}-${{ matrix.config.arch }}.txt
          git commit -m "Add hashes of LLVM build artifacts"
          git push origin ${{ github.head_ref }}

    - name: Azure Login
      if: ${{ (github.repository == 'triton-lang/triton') }}
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Upload LLVM Artifacts to Azure
      if: ${{ (github.repository == 'triton-lang/triton') }}
      run: |
        az storage blob upload --account-name tritonlang --auth-mode login --container-name llvm-builds --file "${{ env.llvm_install_dir }}.tar.gz" --name "${{ env.llvm_install_dir }}.tar.gz" --overwrite

        URL=$(az storage blob url --account-name tritonlang --auth-mode login --container-name llvm-builds --name "${{ env.llvm_install_dir }}.tar.gz")
        echo "Blob URL: ${URL}"

    - name: Azure Logout
      if: ${{ (github.repository == 'triton-lang/triton') }}
      run: |
        az logout
        az cache purge
        az account clear

    - name: Dump Sccache Statistics
      run: sccache --show-stats
